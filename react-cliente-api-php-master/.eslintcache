[{"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\index.js":"1","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\App.js":"2","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\reportWebVitals.js":"3","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Constantes.js":"4","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\CheckoutForm.js":"5","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Home.js":"6","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Noticias.js":"7","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Comercio.js":"8","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Login.js":"9","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Navbar.js":"10","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\consultas\\login.js":"11","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Reset_password.js":"12","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Perfil.js":"13","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\UserContext.js":"14","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\auth.js":"15","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\login.js":"16","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Registration.js":"17","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Verificar.js":"18","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\BankAccount.js":"19","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\VerificationFile.js":"20","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Card.js":"21","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\stripe.js":"22","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\stripe-api.js":"23"},{"size":1827,"mtime":1647138463561,"results":"24","hashOfConfig":"25"},{"size":1908,"mtime":1647030930298,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1608405421000,"results":"27","hashOfConfig":"25"},{"size":1445,"mtime":1644974622561,"results":"28","hashOfConfig":"25"},{"size":1284,"mtime":1645031858909,"results":"29","hashOfConfig":"25"},{"size":1023,"mtime":1645266046839,"results":"30","hashOfConfig":"25"},{"size":1212,"mtime":1644767164798,"results":"31","hashOfConfig":"25"},{"size":402,"mtime":1645266046838,"results":"32","hashOfConfig":"25"},{"size":7443,"mtime":1646227258808,"results":"33","hashOfConfig":"25"},{"size":3082,"mtime":1647025969307,"results":"34","hashOfConfig":"25"},{"size":323,"mtime":1644768718437,"results":"35","hashOfConfig":"25"},{"size":3118,"mtime":1646239937955,"results":"36","hashOfConfig":"25"},{"size":2960,"mtime":1647190313728,"results":"37","hashOfConfig":"25"},{"size":89,"mtime":1645266046880,"results":"38","hashOfConfig":"25"},{"size":3274,"mtime":1647172691029,"results":"39","hashOfConfig":"25"},{"size":2840,"mtime":1646219197855,"results":"40","hashOfConfig":"25"},{"size":24661,"mtime":1647088900639,"results":"41","hashOfConfig":"25"},{"size":1257,"mtime":1647018839646,"results":"42","hashOfConfig":"25"},{"size":19683,"mtime":1647090587978,"results":"43","hashOfConfig":"25"},{"size":2004,"mtime":1647094513837,"results":"44","hashOfConfig":"25"},{"size":1706,"mtime":1647190324737,"results":"45","hashOfConfig":"25"},{"size":4176,"mtime":1647190985369,"results":"46","hashOfConfig":"25"},{"size":1864,"mtime":1647191021931,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1o5mu3v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\index.js",[],["111","112"],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\App.js",["113","114"],"import Hola from './CheckoutForm';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n//import {browserHistory, Route, Router, Switch} from 'react-router';\r\n//import { Fragment } from 'react';\r\nimport Home from './Paginas/Home';\r\nimport Noticias from './Paginas/Noticias';\r\nimport Login from './Paginas/Login';\r\nimport Registration from './Paginas/Registration';\r\nimport Comercio from './Paginas/Comercio';\r\nimport Perfil from './Paginas/Perfil';\r\nimport Navbar from './Paginas/Navbar';\r\nimport Reset_password from './Paginas/Reset_password';\r\nimport { UserContext } from './Paginas/UserContext';\r\nimport { useState, useEffect } from 'react';\r\nimport { isLogged } from './ConsultasAPI/auth';\r\nimport axios from 'axios';\r\nimport Constantes from './Constantes';\r\n\r\nconst App = () => {\r\n  const [user1, setUser1] = useState(false);\r\n\r\n  //MIRAR FUNCION USEMEMO() -- https://www.youtube.com/watch?v=lhMKvyLRWo0&t=455s\r\n\r\n  useEffect(() => {\r\n    isLogged(setUser1);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <UserContext.Provider value={{ user1, setUser1 }}>\r\n        <Router>\r\n          <Navbar />\r\n          <div className='espacioNav'>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/Noticias' component={Noticias} />\r\n              <Route exact path='/Login' component={Login} />\r\n              <Route exact path='/Register' component={Registration} />\r\n              <Route exact path='/Comercio' component={Comercio} />\r\n              <Route exact path='/Perfil/:username' render={(props) => <Perfil {...props} userr={user1} />} />\r\n              <Route path='/reset_password/:token' component={Reset_password} />\r\n              <Route component={Hola} exact path='/pagar' />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </UserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\reportWebVitals.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Constantes.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\CheckoutForm.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Home.js",["115","116"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport energia from '../img/energia.gif';\r\nconst Home = () => {\r\n  return (\r\n    <div className='homePage'>\r\n      <div className='portada'>\r\n        <div className='flex-item'>\r\n          <div className='rec'></div>\r\n          <Link to='/'>El hydriogeno</Link>\r\n          <br />\r\n          <p>En tu casa y en la Mia easy</p>\r\n        </div>\r\n        <div className='flex-item'>\r\n          <img src={energia} alt='loading...' width={550} />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className='portada'>\r\n        <div className='flex-item'>\r\n          <p>goooooolaxod miis muertos</p>\r\n        </div>\r\n        <div className='flex-item'>hola</div>\r\n      </div>\r\n      <br />\r\n      <div className='portada'>\r\n        <div className='flex-item'>\r\n          <p>goooooolaxod miis muertos</p>\r\n        </div>\r\n        <div className='flex-item'>hola</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Noticias.js",["117","118","119","120","121","122"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nclass News {\r\n  constructor(titulo, texto, img) {\r\n    this.titulo = titulo;\r\n    this.texto = texto;\r\n    this.img = img;\r\n  }\r\n  porDefecto = () => {\r\n    this.titulo = 'hola';\r\n    this.texto = 'hola';\r\n    this.img = 'hola';\r\n  };\r\n}\r\n/* 12ce29d50ad04f50a9c82d8b7421e9a0 */\r\nvar noticia = [];\r\nfor (var i = 0; i < 10; i++) {\r\n  noticia.push(new News(`Titulo ${i}`, `tex${i}`, `tex${i}`));\r\n}\r\n\r\nconst Noticias = () => {\r\n  const [datos, setDatos] = useState([]);\r\n  console.log(noticia[0].titulo);\r\n\r\n  return (\r\n    <div>\r\n      {noticia[2].porDefecto()}\r\n\r\n      {noticia.map((resp, index) => (\r\n        <ContenedorNoticia\r\n          key={index}\r\n          titulo={resp.titulo}\r\n          texto={resp.texto}\r\n          img={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContenedorNoticia = ({ titulo, texto, img }) => {\r\n  const imagen = `https://picsum.photos/id/${img + 10}/200/300`;\r\n  return (\r\n    <div className='cartas'>\r\n      <img src={imagen} width={100}></img>\r\n      <p>{titulo}</p>\r\n      <p>{texto}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticias;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Comercio.js",["123","124","125"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from './UserContext';\r\nconst Comercio = () => {\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n  console.log('puta');\r\n  useEffect(() => {\r\n    console.log('hola');\r\n  });\r\n  console.log(user1);\r\n  return <div> {user1.id}</div>;\r\n};\r\n\r\nexport default Comercio;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Login.js",["126","127","128","129","130","131"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport { Log, Reg, Res, onChange, Diverror, Loader } from '../ConsultasAPI/login';\r\n\r\nconst Login = (props) => {\r\n  //Creamos los 3 datos de los formularios\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const [formData2, setFormData2] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [formData3, setFormData3] = useState({\r\n    email: ''\r\n  });\r\n\r\n  //Variable error, vista y cargador\r\n  const [error ,setError ] = useState(\"\");\r\n  const [loader ,setLoader ] = useState(false);\r\n  const [ view ,setView ] = useState(\"login\");\r\n\r\n  //Reseteamos los formularios siempre que se cambia de vista\r\n  const f1 = useRef();\r\n  const f2 = useRef();\r\n  const f3 = useRef();\r\n  const laview = (vista, f) => {\r\n    setError('');\r\n    console.log(f.current);\r\n    f.current.reset();\r\n    setView(vista);\r\n  };\r\n\r\n  return (props.trigger) ? (\r\n    <div className='popUp'>\r\n      {(() => {\r\n        if (view=='register') {\r\n          return (\r\n            <div className='login column is-one-third' id='register'>\r\n        <h1 className='is-size-3'>Sign Up</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setLog(false);setError('')}}>X</button>\r\n\r\n        <form className='field' onSubmit={(e) => Reg(e, formData, setFormData, setError, setLoader)} ref={f1}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='nombre'>\r\n              Username:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              required\r\n              placeholder='Username'\r\n              type='text'\r\n              id='nombre'\r\n              name='username'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='precio'>\r\n              Email:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Email'\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='calificacion'>\r\n            Password:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Password'\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n              autoComplete='on'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='calificacion'>\r\n              Repite Password:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Repeat password'\r\n              type='password'\r\n              id='password2'\r\n              name='password2'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n              autoComplete='on'\r\n            />\r\n          </div>\r\n          <Diverror error={error}/>\r\n          {loader ?(\r\n            <Loader></Loader>\r\n          ):(\r\n            <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Create'\r\n            style={{ marginTop: 20}}\r\n          />\r\n          )}\r\n          \r\n        </form>\r\n        <div className='form-group'>Already have an account? \r\n          <Link to='#' style={{marginLeft: 20}} onClick={() => laview(\"login\", f1)}>Sign In</Link>\r\n        </div>\r\n      </div>\r\n          )\r\n        } else if (view=='login') {\r\n          return (\r\n            <div className='login column is-one-third' id='login'>\r\n        <h1 className='is-size-3'>Sign In</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setLog(false);setError('')}}>X</button>\r\n\r\n        <form className='field' onSubmit={(e) => Log(e, formData2, setFormData2, setError, setLoader)} ref={f2}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='precio'>\r\n              Email or username:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Email or Username'\r\n              type='text'\r\n              id='email'\r\n              name='email'\r\n              onChange={(e) => onChange(e, formData2, setFormData2)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='calificacion'>\r\n              Password:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Password'\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              onChange={(e) => onChange(e, formData2, setFormData2)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          \r\n          <Diverror error={error}/>\r\n          {loader ? (\r\n            <Loader></Loader>\r\n          ) : (\r\n            <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Log In'\r\n            style={{ marginTop: 20}}\r\n          />\r\n          )}\r\n          \r\n          \r\n        </form>\r\n        <div className='form-group'>Forgot your password? \r\n          <Link to='#' style={{marginLeft: 20}} onClick={() => laview(\"reset_password\", f2)}>Reset password</Link>\r\n        </div>\r\n        <div className='form-group'>Don't have an account? \r\n          <Link to ='/Register' style={{marginLeft: 20}} onClick={() => {props.setLog(false);setError('')}}>Sign Up</Link>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      \r\n      \r\n          )\r\n        } else if (view=='reset_password') {\r\n          return (\r\n      <div className='login column is-one-third'>\r\n        <h1 className='is-size-3'>Insert Email</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setLog(false);laview(\"login\", f3);setError('')}}>X</button>\r\n\r\n        <form className='field' onSubmit={(e) => Res(e, formData3, setFormData3, setError, setLoader)} ref={f3}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='precio'>\r\n              Email:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Email'\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              onChange={(e) => onChange(e, formData3, setFormData3)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          \r\n          <Diverror error={error}/>\r\n          {loader ? (\r\n              <Loader></Loader>\r\n            ):(\r\n              <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Reset password'\r\n            style={{ marginTop: 20}}\r\n          />\r\n            )}\r\n          \r\n          \r\n        </form>\r\n      </div>\r\n          )\r\n        } else {\r\n          return (\r\n            ''\r\n          )\r\n        }\r\n      })()}\r\n      \r\n\r\n\r\n      \r\n    </div>\r\n    ): \"\";\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default Login;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Navbar.js",["132","133"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport Login from './Login';\r\nimport { LogOut } from '../ConsultasAPI/auth';\r\nimport { UserContext } from './UserContext';\r\nconst Navbar = () => {\r\n  const [logged, setLog] = useState(false);\r\n  const [desplegar, setDesplegable] = useState(false);\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    console.log(user1.type);\r\n  }, [user1.type]);\r\n\r\n  return ( \r\n    <div className='callate'>\r\n      <header className='site-header'>\r\n        <div className='wrapper site-header__wrapper'>\r\n          <Link to='/' className='brand'>\r\n            Hydrogeno baby\r\n          </Link>\r\n          <nav className='nav'>\r\n            <button className='nav__toggle' aria-expanded='false' type='button'>\r\n              menu\r\n            </button>\r\n            <ul className='nav__wrapper'>\r\n              <li className='nav__item'>\r\n                <Link to='/Noticias'>News</Link>\r\n              </li>\r\n              <li className='nav__item'>\r\n                <Link to='/Comercio'>Comercio</Link>\r\n              </li>\r\n              <li className='nav__item'>\r\n                <p>comercio</p>\r\n              </li>\r\n\r\n              {user1 ? (\r\n                <li\r\n                  className='nav__item'\r\n                  style={{ marginLeft: 100 }}\r\n                  onMouseOver={() => setDesplegable(true)}\r\n                  onMouseLeave={() => setDesplegable(false)}\r\n                >\r\n                  <div to='#' className='divButon'>\r\n                    {user1.username}\r\n                    <DesplegbleUser\r\n                      desplegar={desplegar}\r\n                      user1={user1}\r\n                      logout={() => LogOut(setUser1)}\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ) : (\r\n                <li className='nav__item' style={{ marginLeft: 100 }}>\r\n                  <div\r\n                    to='#'\r\n                    onClick={() => setLog(!logged)}\r\n                    className='divButon'\r\n                  >\r\n                    Sign In\r\n                  </div>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <Login trigger={logged} setLog={setLog}></Login>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DesplegbleUser = ({ desplegar, user1, logout }) => {\r\n  return desplegar ? (\r\n    <div className='desplegable'>\r\n      <Link style={{ color: 'white' }} to={`/Perfil/${user1.username}`}>\r\n        <p>{user1.username}</p>\r\n      </Link>\r\n      <Link style={{ color: 'white' }} to='/Comercio'>\r\n        <p>algo pondremos</p>\r\n      </Link>\r\n      <Link style={{ color: 'white' }} to='/Comercio'>\r\n        <p>algo pondremos</p>\r\n      </Link>\r\n      <Link style={{ color: 'white' }} to='/Comercio'>\r\n        <p>algo pondremos</p>\r\n      </Link>\r\n\r\n      <p onClick={logout}>Log out</p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\consultas\\login.js",[],["134","135"],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Reset_password.js",["136","137","138"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\n\r\n\r\n\r\n\r\nconst Reset_password = (props) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    password2: '',\r\n    id: ''\r\n  });\r\n  //alert(props.match.params.token);\r\n  const [error ,setError ] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    check_token(props.match.params.token, formData, setFormData);\r\n}, [])\r\n\r\n\r\n  const Reset = async (e) => {\r\n    let body = JSON.stringify(formData);\r\n    alert(body);\r\n    e.preventDefault();\r\n    await axios\r\n      .post(`${Constantes.RUTA_API}/reset_password.php`, body)\r\n      .then(function (response) {\r\n          console.log(JSON.stringify(response.data));\r\n          if(response.data.exito){\r\n            setError(\"Exito\");\r\n            localStorage.setItem(\"user_id\", response.data.user_id);\r\n            eval(response.data.callback);\r\n          }else{\r\n            setError(response.data.error);\r\n          }\r\n      });\r\n  };\r\n\r\n  return (\r\n      <div className='column is-one-third'>\r\n        <h1 className='is-size-3'>Reset Password</h1>\r\n\r\n        <form className='field' onSubmit={(e) => Reset(e)}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='password'>\r\n              Password:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              required\r\n              placeholder='Password'\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              autoComplete='new-password'\r\n              onChange={(e) => onChange(e)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='password2'>\r\n              Repeat password:\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Repeat password'\r\n              type='password'\r\n              id='password2'\r\n              name='password2'\r\n              autoComplete='new-password'\r\n              onChange={(e) => onChange(e)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          \r\n          <Diverror error={error}/>\r\n\r\n          <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Change password'\r\n            style={{ marginTop: 20}}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n  );\r\n  \r\n  \r\n};\r\nconst Diverror = ({error}) => {\r\n  return (\r\n  <div>{error}</div>\r\n  );\r\n};\r\nconst check_token = async (eltoken, formData, setFormData) => {\r\n\r\n  await axios\r\n    .get(`${Constantes.RUTA_API}/check_token.php?token=${eltoken}`)\r\n    .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        if(response.data.exito){\r\n          console.log(response.data.user_id);\r\n          setFormData({ ...formData, id: response.data.user_id });\r\n        }\r\n    });\r\n};\r\n\r\nexport default Reset_password;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Perfil.js",["139","140","141","142","143","144","145","146","147","148","149"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isReady } from '../ConsultasAPI/auth';\r\nimport { UserContext } from './UserContext';\r\nimport Verificar from './Verificar';\r\nimport BankAccount from './BankAccount';\r\nimport VerificationFile from './VerificationFile';\r\nimport Card from './Card';\r\n\r\nconst Perfil = (props) => {\r\n  const [ view ,setView ] = useState(false);\r\n  const [seller, setSeller] = useState(false);\r\n  const [haveload, setHaveLoad] = useState(false);\r\n  const [account, setAccount] = useState(false);\r\n  const [ready, setReady] = useState(false);\r\n  const [card, setCard] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n  const [file, setFile] = useState(false);\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n/*\r\n  useEffect(() => {\r\n    alert(user1.type);\r\n    if(user1.type==\"seller\"){\r\n      setSeller(true);\r\n      isReady(user1.stripe_id, setAccount, setFile);\r\n      alert(account);\r\n    }\r\n  }, []);\r\n*/\r\n\r\nif(user1 && !haveload){\r\n  setHaveLoad(true);\r\n  console.log(user1);\r\n  if (user1.verified==\"1\") {\r\n    setVerified(true);\r\n  }\r\n  if(user1.type==\"seller\"){\r\n    setSeller(true);\r\n    isReady(user1.stripe_id, setAccount, setFile, setReady);\r\n    //alert(account);\r\n  }\r\n  \r\n  \r\n}\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <p style={{ fontSize: 30, fontWeight: 700, color: 'black' }}>\r\n        Perfil de {user1.username}\r\n      </p>\r\n      <div className='selectores'>\r\n        <div>Comprados</div>\r\n        <div>Prodctos</div>\r\n        <div>En marccha</div>\r\n      </div>\r\n      {(() => {\r\n        if (view=='verificar') {\r\n          return (\r\n            <Verificar setView={setView}></Verificar>\r\n          )\r\n        }else if (view=='account') {\r\n          return (\r\n            <BankAccount setView={setView}></BankAccount>\r\n          )\r\n        }\r\n        else if (view=='file') {\r\n          return (\r\n            <VerificationFile setView={setView}></VerificationFile>\r\n          )\r\n        }\r\n        else if (view=='card') {\r\n          return (\r\n            <Card setView={setView} id={user1.stripe_id}></Card>\r\n          )\r\n        }\r\n      })()}\r\n      \r\n      {seller ? (\r\n        <div>Vendedor</div>\r\n      ) : ''}\r\n\r\n      {verified ? (\r\n        <div>Verificado</div>\r\n      ) : (<div>\r\n        <button  onClick={() => {setView(\"verificar\")}}>Verificar</button>\r\n      </div>\r\n      )}\r\n      \r\n      {!account ? (\r\n        <div>\r\n        <button  onClick={() => {setView(\"account\")}}>Formulario de cuenta de banco</button>\r\n      </div>\r\n      ) : ''}\r\n      {!file ? (\r\n        <div>\r\n        <button  onClick={() => {setView(\"file\")}}>Formulario pa subir un archivo </button>\r\n        </div>\r\n      ) : ''}\r\n      {ready ? (\r\n        <div>\r\n        <button  onClick={() => {setView(\"card\")}}>Pay </button>\r\n        </div>\r\n      ) : ''}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\UserContext.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\auth.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\login.js",["150","151"],"import axios from 'axios';\r\nimport Constantes from '../Constantes';\r\n\r\n\r\n//--------------LOGIN--------------------------------------------------\r\n\r\nexport const Log = async (e, formData, setFormData, setError, setLoader) => {\r\n  setLoader(true);\r\n  setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  let body = JSON.stringify(formData);\r\n  //Registrar(body);\r\n //alert(body);\r\n  e.preventDefault();\r\n  await axios\r\n    .post(`${Constantes.RUTA_API}/login.php`, body)\r\n    .then(function (response) {\r\n        \r\n        console.log(JSON.stringify(response.data));\r\n        if(response.data.exito){\r\n          //setError(\"Exito\");\r\n          localStorage.setItem(\"user_id\", response.data.user_id);\r\n          eval(response.data.callback);\r\n          \r\n        }else{\r\n          setLoader(false);\r\n          setError(response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\n//------------------REGISTER----------------------------------\r\n\r\nexport const Reg = async (e, formData, setFormData, setError, setLoader) => {\r\n  setLoader(true);\r\n  setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  \r\n  console.log(formData);\r\n  let body = JSON.stringify(formData);\r\n  e.preventDefault();\r\n  \r\n  await axios\r\n    .post(`${Constantes.RUTA_API}/guardar_usuario.php`, body)\r\n    .then(function (response) {\r\n      \r\n      console.log(JSON.stringify(response.data));\r\n      if(response.data.exito){\r\n        //setError(\"Exito\");\r\n        localStorage.setItem(\"user_id\", response.data.user_id);\r\n        eval(response.data.callback);\r\n      }else{\r\n        setLoader(false);\r\n        setError(response.data.error);\r\n      }\r\n    });\r\n  \r\n};\r\n\r\n//-----------------------Reset Password-----------------------------\r\n\r\nexport const Res = async (e, formData, setFormData, setError, setLoader) => {\r\n  setLoader(true);\r\n  setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  let body = JSON.stringify(formData);\r\n  //Registrar(body);\r\n  //lert(body);\r\n  e.preventDefault();\r\n  await axios\r\n    .post(`${Constantes.RUTA_API}/check_email.php`, body)\r\n    .then(function (response) {\r\n        setLoader(false);\r\n        console.log(JSON.stringify(response.data));\r\n        if(response.data.exito){\r\n          setError(\"Email send succesfully. Please check your Email\");\r\n          console.log(response.data.contra);\r\n        }else{\r\n          setError(response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n//-------------------Update Forms----------------------\r\n\r\nexport const onChange = (e, formData, setFormData) => {\r\n  setFormData({ ...formData, [e.target.name]: e.target.value });\r\n};\r\n\r\n//---------------------Error---------------------------\r\nexport const Diverror = ({error}) => {\r\n  return (\r\n  <div>{error}</div>\r\n  );\r\n};\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"lds-dual-ring\"></div>\r\n  );\r\n};","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Registration.js",["152","153","154","155","156","157","158","159"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport {Reg, onChange, Diverror, Loader } from '../ConsultasAPI/login';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nconst Registration = () => {\r\n  //Creamos los 3 datos de los formularios\r\n\r\n\r\n  \r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    type: 'buyer',\r\n    company_name:'',\r\n    company_id:'',\r\n    phone:'',\r\n    company_city:'',\r\n    company_address:'',\r\n    company_zip:'',\r\n    company_state:'',\r\n    company_country:'',\r\n    personal_name:'',\r\n    personal_last_name:'',\r\n    personal_title:'',\r\n    dob:'',\r\n  });\r\n  const [formData2, setFormData2] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [formData3, setFormData3] = useState({\r\n    email: ''\r\n  });\r\n\r\n  //Variable error, vista y cargador\r\n  const [error ,setError ] = useState(\"\");\r\n  const [loader ,setLoader ] = useState(false);\r\n  const refBuyer = useRef();\r\n  const refSeller = useRef();\r\n\r\n  const laview = (tipo, larefactiva, larefinactiva) => {\r\n    larefactiva.current.className =\"typeButton active\";\r\n    larefinactiva.current.className =\"typeButton\";\r\n    setFormData({ ...formData, type: tipo});\r\n  };\r\n  const cambiarTel = (number) => {\r\n    setFormData({ ...formData, phone: number});\r\n    console.log(formData);\r\n  };\r\n\r\n  return (\r\n      \r\n      <div className='registration column is-one-third' id='register'>\r\n        <h1 className='is-size-3'>Registration</h1>\r\n        <label className='label' htmlFor='nombre'>\r\n              Type\r\n            </label>\r\n            <div className='typeDiv'>\r\n              <button className ='typeButton active' ref={refBuyer} onClick={() => laview(\"buyer\", refBuyer, refSeller)}>Buyer</button>\r\n              <button className ='typeButton' ref={refSeller} onClick={() => laview(\"seller\", refSeller, refBuyer)}>Seller</button>\r\n            </div>\r\n        <form className='field regForm' onSubmit={(e) => Reg(e, formData, setFormData, setError, setLoader)}>\r\n          <div className='form-group'>\r\n            \r\n\r\n            <label className='label' htmlFor='nombre'>\r\n              Username\r\n            </label>\r\n            <input\r\n              \r\n              required\r\n              placeholder='Username'\r\n              type='text'\r\n              id='nombre'\r\n              name='username'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='precio'>\r\n              Email\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Email'\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='calificacion'>\r\n            Password\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Password'\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n              autoComplete='new-password'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='calificacion'>\r\n              Repite Password\r\n            </label>\r\n            <input\r\n              required\r\n              placeholder='Repeat password'\r\n              type='password'\r\n              id='password2'\r\n              name='password2'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n              autoComplete='new-password'\r\n            />\r\n          </div>\r\n          {(() => {\r\n            if (formData.type=='seller') {\r\n              return (\r\n                <div className='company-info'>\r\n                  <div className='company-info-text'>Company information</div>\r\n                  <label className='label' htmlFor='nombre'>\r\n                    Name\r\n                  </label>\r\n                  <input required placeholder='Company Name' type='text' id='nombre' name='company_name' \r\n                    onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                  />\r\n                  <input required placeholder='Company Tax ID (12-3456789)' type='text' id='nombre' name='company_id' \r\n                    onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                  />\r\n                  <label className='label' htmlFor='nombre'>\r\n                    Address\r\n                  </label>\r\n                  <input required placeholder='Street Address' type='text' id='nombre' name='company_address' \r\n                    onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                  />\r\n                  <div className='input50'>\r\n                    <input required placeholder='City' type='text' id='nombre' name='company_city' \r\n                      onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                    />\r\n                    <input required placeholder='State' type='text' id='nombre' name='company_state' \r\n                      onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                    />\r\n                  </div>\r\n                  <div className='input50'>\r\n                    <input required placeholder='Zip Code' type='text' id='nombre' name='company_zip' \r\n                      onChange={(e) => onChange(e, formData, setFormData)} className='input'\r\n                    />\r\n                    <select className='simInput' id=\"country\" name=\"company_country\" defaultValue={'DEFAULT'} onChange={(e) => onChange(e, formData, setFormData)}>\r\n                      <option disabled value='DEFAULT'>Country</option>\r\n                      <option value=\"AF\">Afghanistan</option>\r\n                      <option value=\"AX\">Aland Islands</option>\r\n                      <option value=\"AL\">Albania</option>\r\n                      <option value=\"DZ\">Algeria</option>\r\n                      <option value=\"AS\">American Samoa</option>\r\n                      <option value=\"AD\">Andorra</option>\r\n                      <option value=\"AO\">Angola</option>\r\n                      <option value=\"AI\">Anguilla</option>\r\n                      <option value=\"AQ\">Antarctica</option>\r\n                      <option value=\"AG\">Antigua and Barbuda</option>\r\n                      <option value=\"AR\">Argentina</option>\r\n                      <option value=\"AM\">Armenia</option>\r\n                      <option value=\"AW\">Aruba</option>\r\n                      <option value=\"AU\">Australia</option>\r\n                      <option value=\"AT\">Austria</option>\r\n                      <option value=\"AZ\">Azerbaijan</option>\r\n                      <option value=\"BS\">Bahamas</option>\r\n                      <option value=\"BH\">Bahrain</option>\r\n                      <option value=\"BD\">Bangladesh</option>\r\n                      <option value=\"BB\">Barbados</option>\r\n                      <option value=\"BY\">Belarus</option>\r\n                      <option value=\"BE\">Belgium</option>\r\n                      <option value=\"BZ\">Belize</option>\r\n                      <option value=\"BJ\">Benin</option>\r\n                      <option value=\"BM\">Bermuda</option>\r\n                      <option value=\"BT\">Bhutan</option>\r\n                      <option value=\"BO\">Bolivia</option>\r\n                      <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                      <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                      <option value=\"BW\">Botswana</option>\r\n                      <option value=\"BV\">Bouvet Island</option>\r\n                      <option value=\"BR\">Brazil</option>\r\n                      <option value=\"IO\">British Indian Ocean Territory</option>\r\n                      <option value=\"BN\">Brunei Darussalam</option>\r\n                      <option value=\"BG\">Bulgaria</option>\r\n                      <option value=\"BF\">Burkina Faso</option>\r\n                      <option value=\"BI\">Burundi</option>\r\n                      <option value=\"KH\">Cambodia</option>\r\n                      <option value=\"CM\">Cameroon</option>\r\n                      <option value=\"CA\">Canada</option>\r\n                      <option value=\"CV\">Cape Verde</option>\r\n                      <option value=\"KY\">Cayman Islands</option>\r\n                      <option value=\"CF\">Central African Republic</option>\r\n                      <option value=\"TD\">Chad</option>\r\n                      <option value=\"CL\">Chile</option>\r\n                      <option value=\"CN\">China</option>\r\n                      <option value=\"CX\">Christmas Island</option>\r\n                      <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                      <option value=\"CO\">Colombia</option>\r\n                      <option value=\"KM\">Comoros</option>\r\n                      <option value=\"CG\">Congo</option>\r\n                      <option value=\"CD\">Congo, Democratic Republic of the Congo</option>\r\n                      <option value=\"CK\">Cook Islands</option>\r\n                      <option value=\"CR\">Costa Rica</option>\r\n                      <option value=\"CI\">Cote D'Ivoire</option>\r\n                      <option value=\"HR\">Croatia</option>\r\n                      <option value=\"CU\">Cuba</option>\r\n                      <option value=\"CW\">Curacao</option>\r\n                      <option value=\"CY\">Cyprus</option>\r\n                      <option value=\"CZ\">Czech Republic</option>\r\n                      <option value=\"DK\">Denmark</option>\r\n                      <option value=\"DJ\">Djibouti</option>\r\n                      <option value=\"DM\">Dominica</option>\r\n                      <option value=\"DO\">Dominican Republic</option>\r\n                      <option value=\"EC\">Ecuador</option>\r\n                      <option value=\"EG\">Egypt</option>\r\n                      <option value=\"SV\">El Salvador</option>\r\n                      <option value=\"GQ\">Equatorial Guinea</option>\r\n                      <option value=\"ER\">Eritrea</option>\r\n                      <option value=\"EE\">Estonia</option>\r\n                      <option value=\"ET\">Ethiopia</option>\r\n                      <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                      <option value=\"FO\">Faroe Islands</option>\r\n                      <option value=\"FJ\">Fiji</option>\r\n                      <option value=\"FI\">Finland</option>\r\n                      <option value=\"FR\">France</option>\r\n                      <option value=\"GF\">French Guiana</option>\r\n                      <option value=\"PF\">French Polynesia</option>\r\n                      <option value=\"TF\">French Southern Territories</option>\r\n                      <option value=\"GA\">Gabon</option>\r\n                      <option value=\"GM\">Gambia</option>\r\n                      <option value=\"GE\">Georgia</option>\r\n                      <option value=\"DE\">Germany</option>\r\n                      <option value=\"GH\">Ghana</option>\r\n                      <option value=\"GI\">Gibraltar</option>\r\n                      <option value=\"GR\">Greece</option>\r\n                      <option value=\"GL\">Greenland</option>\r\n                      <option value=\"GD\">Grenada</option>\r\n                      <option value=\"GP\">Guadeloupe</option>\r\n                      <option value=\"GU\">Guam</option>\r\n                      <option value=\"GT\">Guatemala</option>\r\n                      <option value=\"GG\">Guernsey</option>\r\n                      <option value=\"GN\">Guinea</option>\r\n                      <option value=\"GW\">Guinea-Bissau</option>\r\n                      <option value=\"GY\">Guyana</option>\r\n                      <option value=\"HT\">Haiti</option>\r\n                      <option value=\"HM\">Heard Island and Mcdonald Islands</option>\r\n                      <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                      <option value=\"HN\">Honduras</option>\r\n                      <option value=\"HK\">Hong Kong</option>\r\n                      <option value=\"HU\">Hungary</option>\r\n                      <option value=\"IS\">Iceland</option>\r\n                      <option value=\"IN\">India</option>\r\n                      <option value=\"ID\">Indonesia</option>\r\n                      <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                      <option value=\"IQ\">Iraq</option>\r\n                      <option value=\"IE\">Ireland</option>\r\n                      <option value=\"IM\">Isle of Man</option>\r\n                      <option value=\"IL\">Israel</option>\r\n                      <option value=\"IT\">Italy</option>\r\n                      <option value=\"JM\">Jamaica</option>\r\n                      <option value=\"JP\">Japan</option>\r\n                      <option value=\"JE\">Jersey</option>\r\n                      <option value=\"JO\">Jordan</option>\r\n                      <option value=\"KZ\">Kazakhstan</option>\r\n                      <option value=\"KE\">Kenya</option>\r\n                      <option value=\"KI\">Kiribati</option>\r\n                      <option value=\"KP\">Korea, Democratic People's Republic of</option>\r\n                      <option value=\"KR\">Korea, Republic of</option>\r\n                      <option value=\"XK\">Kosovo</option>\r\n                      <option value=\"KW\">Kuwait</option>\r\n                      <option value=\"KG\">Kyrgyzstan</option>\r\n                      <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                      <option value=\"LV\">Latvia</option>\r\n                      <option value=\"LB\">Lebanon</option>\r\n                      <option value=\"LS\">Lesotho</option>\r\n                      <option value=\"LR\">Liberia</option>\r\n                      <option value=\"LY\">Libyan Arab Jamahiriya</option>\r\n                      <option value=\"LI\">Liechtenstein</option>\r\n                      <option value=\"LT\">Lithuania</option>\r\n                      <option value=\"LU\">Luxembourg</option>\r\n                      <option value=\"MO\">Macao</option>\r\n                      <option value=\"MK\">Macedonia, the Former Yugoslav Republic of</option>\r\n                      <option value=\"MG\">Madagascar</option>\r\n                      <option value=\"MW\">Malawi</option>\r\n                      <option value=\"MY\">Malaysia</option>\r\n                      <option value=\"MV\">Maldives</option>\r\n                      <option value=\"ML\">Mali</option>\r\n                      <option value=\"MT\">Malta</option>\r\n                      <option value=\"MH\">Marshall Islands</option>\r\n                      <option value=\"MQ\">Martinique</option>\r\n                      <option value=\"MR\">Mauritania</option>\r\n                      <option value=\"MU\">Mauritius</option>\r\n                      <option value=\"YT\">Mayotte</option>\r\n                      <option value=\"MX\">Mexico</option>\r\n                      <option value=\"FM\">Micronesia, Federated States of</option>\r\n                      <option value=\"MD\">Moldova, Republic of</option>\r\n                      <option value=\"MC\">Monaco</option>\r\n                      <option value=\"MN\">Mongolia</option>\r\n                      <option value=\"ME\">Montenegro</option>\r\n                      <option value=\"MS\">Montserrat</option>\r\n                      <option value=\"MA\">Morocco</option>\r\n                      <option value=\"MZ\">Mozambique</option>\r\n                      <option value=\"MM\">Myanmar</option>\r\n                      <option value=\"NA\">Namibia</option>\r\n                      <option value=\"NR\">Nauru</option>\r\n                      <option value=\"NP\">Nepal</option>\r\n                      <option value=\"NL\">Netherlands</option>\r\n                      <option value=\"AN\">Netherlands Antilles</option>\r\n                      <option value=\"NC\">New Caledonia</option>\r\n                      <option value=\"NZ\">New Zealand</option>\r\n                      <option value=\"NI\">Nicaragua</option>\r\n                      <option value=\"NE\">Niger</option>\r\n                      <option value=\"NG\">Nigeria</option>\r\n                      <option value=\"NU\">Niue</option>\r\n                      <option value=\"NF\">Norfolk Island</option>\r\n                      <option value=\"MP\">Northern Mariana Islands</option>\r\n                      <option value=\"NO\">Norway</option>\r\n                      <option value=\"OM\">Oman</option>\r\n                      <option value=\"PK\">Pakistan</option>\r\n                      <option value=\"PW\">Palau</option>\r\n                      <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                      <option value=\"PA\">Panama</option>\r\n                      <option value=\"PG\">Papua New Guinea</option>\r\n                      <option value=\"PY\">Paraguay</option>\r\n                      <option value=\"PE\">Peru</option>\r\n                      <option value=\"PH\">Philippines</option>\r\n                      <option value=\"PN\">Pitcairn</option>\r\n                      <option value=\"PL\">Poland</option>\r\n                      <option value=\"PT\">Portugal</option>\r\n                      <option value=\"PR\">Puerto Rico</option>\r\n                      <option value=\"QA\">Qatar</option>\r\n                      <option value=\"RE\">Reunion</option>\r\n                      <option value=\"RO\">Romania</option>\r\n                      <option value=\"RU\">Russian Federation</option>\r\n                      <option value=\"RW\">Rwanda</option>\r\n                      <option value=\"BL\">Saint Barthelemy</option>\r\n                      <option value=\"SH\">Saint Helena</option>\r\n                      <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                      <option value=\"LC\">Saint Lucia</option>\r\n                      <option value=\"MF\">Saint Martin</option>\r\n                      <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                      <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                      <option value=\"WS\">Samoa</option>\r\n                      <option value=\"SM\">San Marino</option>\r\n                      <option value=\"ST\">Sao Tome and Principe</option>\r\n                      <option value=\"SA\">Saudi Arabia</option>\r\n                      <option value=\"SN\">Senegal</option>\r\n                      <option value=\"RS\">Serbia</option>\r\n                      <option value=\"CS\">Serbia and Montenegro</option>\r\n                      <option value=\"SC\">Seychelles</option>\r\n                      <option value=\"SL\">Sierra Leone</option>\r\n                      <option value=\"SG\">Singapore</option>\r\n                      <option value=\"SX\">Sint Maarten</option>\r\n                      <option value=\"SK\">Slovakia</option>\r\n                      <option value=\"SI\">Slovenia</option>\r\n                      <option value=\"SB\">Solomon Islands</option>\r\n                      <option value=\"SO\">Somalia</option>\r\n                      <option value=\"ZA\">South Africa</option>\r\n                      <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\r\n                      <option value=\"SS\">South Sudan</option>\r\n                      <option value=\"ES\">Spain</option>\r\n                      <option value=\"LK\">Sri Lanka</option>\r\n                      <option value=\"SD\">Sudan</option>\r\n                      <option value=\"SR\">Suriname</option>\r\n                      <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                      <option value=\"SZ\">Swaziland</option>\r\n                      <option value=\"SE\">Sweden</option>\r\n                      <option value=\"CH\">Switzerland</option>\r\n                      <option value=\"SY\">Syrian Arab Republic</option>\r\n                      <option value=\"TW\">Taiwan, Province of China</option>\r\n                      <option value=\"TJ\">Tajikistan</option>\r\n                      <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                      <option value=\"TH\">Thailand</option>\r\n                      <option value=\"TL\">Timor-Leste</option>\r\n                      <option value=\"TG\">Togo</option>\r\n                      <option value=\"TK\">Tokelau</option>\r\n                      <option value=\"TO\">Tonga</option>\r\n                      <option value=\"TT\">Trinidad and Tobago</option>\r\n                      <option value=\"TN\">Tunisia</option>\r\n                      <option value=\"TR\">Turkey</option>\r\n                      <option value=\"TM\">Turkmenistan</option>\r\n                      <option value=\"TC\">Turks and Caicos Islands</option>\r\n                      <option value=\"TV\">Tuvalu</option>\r\n                      <option value=\"UG\">Uganda</option>\r\n                      <option value=\"UA\">Ukraine</option>\r\n                      <option value=\"AE\">United Arab Emirates</option>\r\n                      <option value=\"GB\">United Kingdom</option>\r\n                      <option value=\"US\">United States</option>\r\n                      <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                      <option value=\"UY\">Uruguay</option>\r\n                      <option value=\"UZ\">Uzbekistan</option>\r\n                      <option value=\"VU\">Vanuatu</option>\r\n                      <option value=\"VE\">Venezuela</option>\r\n                      <option value=\"VN\">Viet Nam</option>\r\n                      <option value=\"VG\">Virgin Islands, British</option>\r\n                      <option value=\"VI\">Virgin Islands, U.s.</option>\r\n                      <option value=\"WF\">Wallis and Futuna</option>\r\n                      <option value=\"EH\">Western Sahara</option>\r\n                      <option value=\"YE\">Yemen</option>\r\n                      <option value=\"ZM\">Zambia</option>\r\n                      <option value=\"ZW\">Zimbabwe</option>\r\n                    </select>\r\n                    \r\n                  </div>\r\n\r\n                  <label className='label' htmlFor='nombre'>\r\n                    Company Phone Number\r\n                  </label>\r\n                  \r\n                  <PhoneInput placeholder='Phone Number' defaultCountry=\"US\"  onChange={(e) => {cambiarTel(e)}}/>\r\n                  <label className='label' htmlFor='nombre'>\r\n                    Personal information\r\n                  </label>\r\n                  <input\r\n                    required\r\n                    placeholder='Name'\r\n                    type='text'\r\n                    id='personal_name'\r\n                    name='personal_name'\r\n                    onChange={(e) => onChange(e, formData, setFormData)}\r\n                    className='input'\r\n                  />\r\n                  <input\r\n                    required\r\n                    placeholder='Last Name'\r\n                    type='text'\r\n                    id='personal_last_name'\r\n                    name='personal_last_name'\r\n                    onChange={(e) => onChange(e, formData, setFormData)}\r\n                    className='input'\r\n                  />\r\n                  <input\r\n                    required\r\n                    placeholder='Day of Birthday'\r\n                    type='date'\r\n                    id='dob'\r\n                    name='dob'\r\n                    onChange={(e) => onChange(e, formData, setFormData)}\r\n                    className='input'\r\n                  />\r\n                  <input\r\n                    required\r\n                    placeholder='Title in company'\r\n                    type='text'\r\n                    id='personal_title'\r\n                    name='personal_title'\r\n                    onChange={(e) => onChange(e, formData, setFormData)}\r\n                    className='input'\r\n                  />\r\n                </div>\r\n              )\r\n              }\r\n          })()}\r\n          <Diverror error={error}/>\r\n          {loader ?(\r\n            <Loader></Loader>\r\n          ):(\r\n            <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Create'\r\n            style={{ marginTop: 20}}\r\n          />\r\n          )}\r\n          \r\n        </form>\r\n        <div className='form-group'>Already have an account? \r\n          <Link to='#' style={{marginLeft: 20}} >Sign In</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default Registration;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Verificar.js",["160","161","162","163","164","165"],"import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport { UserContext } from './UserContext';\r\nimport { resend_email } from '../ConsultasAPI/auth';\r\nimport { Diverror, Loader } from '../ConsultasAPI/login';\r\n\r\nconst Verificar = (props) => {\r\n\r\n\r\n  //Variable error, vista y cargador\r\n  const [error ,setError ] = useState(\"\");\r\n  const [loader ,setLoader ] = useState(false);\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n\r\n  return (\r\n    <div className='popUp'>\r\n      <div className='login column is-one-third' id='register'>\r\n        <h1 className='is-size-3'>Verify email</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setView(false);setError('')}}>X</button>\r\n        <div>Click here to receive an email to {user1.email} for verify your email </div>\r\n        {loader ?(\r\n          <Loader></Loader>\r\n        ):(\r\n          <button className='divButon'onClick={() => {resend_email(user1.id, user1.email, setLoader, setError)}} >Send</button>\r\n        )}\r\n        <Diverror error={error}/>\r\n        \r\n      </div>\r\n\r\n\r\n    \r\n    </div>\r\n    );\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default Verificar;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\BankAccount.js",["166","167","168","169","170","171","172"],"import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport { UserContext } from './UserContext';\r\nimport { bank_account } from '../ConsultasAPI/auth';\r\nimport { Diverror, Loader, Reg, onChange } from '../ConsultasAPI/login';\r\n\r\nconst BankAccount = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    country: '',\r\n    currency: 'usd',\r\n    account_number: '',\r\n    routing_number: '',\r\n  });\r\n\r\n  //Variable error, vista y cargador\r\n  const [error ,setError ] = useState(\"\");\r\n  const [loader ,setLoader ] = useState(false);\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n\r\n  return (\r\n    <div className='popUp'>\r\n      <div className='login column is-one-third' id='register'>\r\n        <h1 className='is-size-3'>Bank Account</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setView(false);setError('')}}>X</button>\r\n        <form className='field' onSubmit={(e) => bank_account(e, user1.stripe_id, formData, setFormData, setError, setLoader)}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='nombre'>\r\n              Holder Name:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              required\r\n              placeholder='Holder Name'\r\n              type='text'\r\n              id='nombre'\r\n              name='name'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n          </div>\r\n          <label className='label' htmlFor='nombre'>\r\n              Country:\r\n            </label>\r\n          <div className='input50'>\r\n                    <select className='simInput' id=\"country\" name=\"country\" defaultValue={'DEFAULT'} onChange={(e) => onChange(e, formData, setFormData)}>\r\n                      <option disabled value='DEFAULT'>Country</option>\r\n                      <option value=\"AF\">Afghanistan</option>\r\n                      <option value=\"AX\">Aland Islands</option>\r\n                      <option value=\"AL\">Albania</option>\r\n                      <option value=\"DZ\">Algeria</option>\r\n                      <option value=\"AS\">American Samoa</option>\r\n                      <option value=\"AD\">Andorra</option>\r\n                      <option value=\"AO\">Angola</option>\r\n                      <option value=\"AI\">Anguilla</option>\r\n                      <option value=\"AQ\">Antarctica</option>\r\n                      <option value=\"AG\">Antigua and Barbuda</option>\r\n                      <option value=\"AR\">Argentina</option>\r\n                      <option value=\"AM\">Armenia</option>\r\n                      <option value=\"AW\">Aruba</option>\r\n                      <option value=\"AU\">Australia</option>\r\n                      <option value=\"AT\">Austria</option>\r\n                      <option value=\"AZ\">Azerbaijan</option>\r\n                      <option value=\"BS\">Bahamas</option>\r\n                      <option value=\"BH\">Bahrain</option>\r\n                      <option value=\"BD\">Bangladesh</option>\r\n                      <option value=\"BB\">Barbados</option>\r\n                      <option value=\"BY\">Belarus</option>\r\n                      <option value=\"BE\">Belgium</option>\r\n                      <option value=\"BZ\">Belize</option>\r\n                      <option value=\"BJ\">Benin</option>\r\n                      <option value=\"BM\">Bermuda</option>\r\n                      <option value=\"BT\">Bhutan</option>\r\n                      <option value=\"BO\">Bolivia</option>\r\n                      <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                      <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                      <option value=\"BW\">Botswana</option>\r\n                      <option value=\"BV\">Bouvet Island</option>\r\n                      <option value=\"BR\">Brazil</option>\r\n                      <option value=\"IO\">British Indian Ocean Territory</option>\r\n                      <option value=\"BN\">Brunei Darussalam</option>\r\n                      <option value=\"BG\">Bulgaria</option>\r\n                      <option value=\"BF\">Burkina Faso</option>\r\n                      <option value=\"BI\">Burundi</option>\r\n                      <option value=\"KH\">Cambodia</option>\r\n                      <option value=\"CM\">Cameroon</option>\r\n                      <option value=\"CA\">Canada</option>\r\n                      <option value=\"CV\">Cape Verde</option>\r\n                      <option value=\"KY\">Cayman Islands</option>\r\n                      <option value=\"CF\">Central African Republic</option>\r\n                      <option value=\"TD\">Chad</option>\r\n                      <option value=\"CL\">Chile</option>\r\n                      <option value=\"CN\">China</option>\r\n                      <option value=\"CX\">Christmas Island</option>\r\n                      <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                      <option value=\"CO\">Colombia</option>\r\n                      <option value=\"KM\">Comoros</option>\r\n                      <option value=\"CG\">Congo</option>\r\n                      <option value=\"CD\">Congo, Democratic Republic of the Congo</option>\r\n                      <option value=\"CK\">Cook Islands</option>\r\n                      <option value=\"CR\">Costa Rica</option>\r\n                      <option value=\"CI\">Cote D'Ivoire</option>\r\n                      <option value=\"HR\">Croatia</option>\r\n                      <option value=\"CU\">Cuba</option>\r\n                      <option value=\"CW\">Curacao</option>\r\n                      <option value=\"CY\">Cyprus</option>\r\n                      <option value=\"CZ\">Czech Republic</option>\r\n                      <option value=\"DK\">Denmark</option>\r\n                      <option value=\"DJ\">Djibouti</option>\r\n                      <option value=\"DM\">Dominica</option>\r\n                      <option value=\"DO\">Dominican Republic</option>\r\n                      <option value=\"EC\">Ecuador</option>\r\n                      <option value=\"EG\">Egypt</option>\r\n                      <option value=\"SV\">El Salvador</option>\r\n                      <option value=\"GQ\">Equatorial Guinea</option>\r\n                      <option value=\"ER\">Eritrea</option>\r\n                      <option value=\"EE\">Estonia</option>\r\n                      <option value=\"ET\">Ethiopia</option>\r\n                      <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                      <option value=\"FO\">Faroe Islands</option>\r\n                      <option value=\"FJ\">Fiji</option>\r\n                      <option value=\"FI\">Finland</option>\r\n                      <option value=\"FR\">France</option>\r\n                      <option value=\"GF\">French Guiana</option>\r\n                      <option value=\"PF\">French Polynesia</option>\r\n                      <option value=\"TF\">French Southern Territories</option>\r\n                      <option value=\"GA\">Gabon</option>\r\n                      <option value=\"GM\">Gambia</option>\r\n                      <option value=\"GE\">Georgia</option>\r\n                      <option value=\"DE\">Germany</option>\r\n                      <option value=\"GH\">Ghana</option>\r\n                      <option value=\"GI\">Gibraltar</option>\r\n                      <option value=\"GR\">Greece</option>\r\n                      <option value=\"GL\">Greenland</option>\r\n                      <option value=\"GD\">Grenada</option>\r\n                      <option value=\"GP\">Guadeloupe</option>\r\n                      <option value=\"GU\">Guam</option>\r\n                      <option value=\"GT\">Guatemala</option>\r\n                      <option value=\"GG\">Guernsey</option>\r\n                      <option value=\"GN\">Guinea</option>\r\n                      <option value=\"GW\">Guinea-Bissau</option>\r\n                      <option value=\"GY\">Guyana</option>\r\n                      <option value=\"HT\">Haiti</option>\r\n                      <option value=\"HM\">Heard Island and Mcdonald Islands</option>\r\n                      <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                      <option value=\"HN\">Honduras</option>\r\n                      <option value=\"HK\">Hong Kong</option>\r\n                      <option value=\"HU\">Hungary</option>\r\n                      <option value=\"IS\">Iceland</option>\r\n                      <option value=\"IN\">India</option>\r\n                      <option value=\"ID\">Indonesia</option>\r\n                      <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                      <option value=\"IQ\">Iraq</option>\r\n                      <option value=\"IE\">Ireland</option>\r\n                      <option value=\"IM\">Isle of Man</option>\r\n                      <option value=\"IL\">Israel</option>\r\n                      <option value=\"IT\">Italy</option>\r\n                      <option value=\"JM\">Jamaica</option>\r\n                      <option value=\"JP\">Japan</option>\r\n                      <option value=\"JE\">Jersey</option>\r\n                      <option value=\"JO\">Jordan</option>\r\n                      <option value=\"KZ\">Kazakhstan</option>\r\n                      <option value=\"KE\">Kenya</option>\r\n                      <option value=\"KI\">Kiribati</option>\r\n                      <option value=\"KP\">Korea, Democratic People's Republic of</option>\r\n                      <option value=\"KR\">Korea, Republic of</option>\r\n                      <option value=\"XK\">Kosovo</option>\r\n                      <option value=\"KW\">Kuwait</option>\r\n                      <option value=\"KG\">Kyrgyzstan</option>\r\n                      <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                      <option value=\"LV\">Latvia</option>\r\n                      <option value=\"LB\">Lebanon</option>\r\n                      <option value=\"LS\">Lesotho</option>\r\n                      <option value=\"LR\">Liberia</option>\r\n                      <option value=\"LY\">Libyan Arab Jamahiriya</option>\r\n                      <option value=\"LI\">Liechtenstein</option>\r\n                      <option value=\"LT\">Lithuania</option>\r\n                      <option value=\"LU\">Luxembourg</option>\r\n                      <option value=\"MO\">Macao</option>\r\n                      <option value=\"MK\">Macedonia, the Former Yugoslav Republic of</option>\r\n                      <option value=\"MG\">Madagascar</option>\r\n                      <option value=\"MW\">Malawi</option>\r\n                      <option value=\"MY\">Malaysia</option>\r\n                      <option value=\"MV\">Maldives</option>\r\n                      <option value=\"ML\">Mali</option>\r\n                      <option value=\"MT\">Malta</option>\r\n                      <option value=\"MH\">Marshall Islands</option>\r\n                      <option value=\"MQ\">Martinique</option>\r\n                      <option value=\"MR\">Mauritania</option>\r\n                      <option value=\"MU\">Mauritius</option>\r\n                      <option value=\"YT\">Mayotte</option>\r\n                      <option value=\"MX\">Mexico</option>\r\n                      <option value=\"FM\">Micronesia, Federated States of</option>\r\n                      <option value=\"MD\">Moldova, Republic of</option>\r\n                      <option value=\"MC\">Monaco</option>\r\n                      <option value=\"MN\">Mongolia</option>\r\n                      <option value=\"ME\">Montenegro</option>\r\n                      <option value=\"MS\">Montserrat</option>\r\n                      <option value=\"MA\">Morocco</option>\r\n                      <option value=\"MZ\">Mozambique</option>\r\n                      <option value=\"MM\">Myanmar</option>\r\n                      <option value=\"NA\">Namibia</option>\r\n                      <option value=\"NR\">Nauru</option>\r\n                      <option value=\"NP\">Nepal</option>\r\n                      <option value=\"NL\">Netherlands</option>\r\n                      <option value=\"AN\">Netherlands Antilles</option>\r\n                      <option value=\"NC\">New Caledonia</option>\r\n                      <option value=\"NZ\">New Zealand</option>\r\n                      <option value=\"NI\">Nicaragua</option>\r\n                      <option value=\"NE\">Niger</option>\r\n                      <option value=\"NG\">Nigeria</option>\r\n                      <option value=\"NU\">Niue</option>\r\n                      <option value=\"NF\">Norfolk Island</option>\r\n                      <option value=\"MP\">Northern Mariana Islands</option>\r\n                      <option value=\"NO\">Norway</option>\r\n                      <option value=\"OM\">Oman</option>\r\n                      <option value=\"PK\">Pakistan</option>\r\n                      <option value=\"PW\">Palau</option>\r\n                      <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                      <option value=\"PA\">Panama</option>\r\n                      <option value=\"PG\">Papua New Guinea</option>\r\n                      <option value=\"PY\">Paraguay</option>\r\n                      <option value=\"PE\">Peru</option>\r\n                      <option value=\"PH\">Philippines</option>\r\n                      <option value=\"PN\">Pitcairn</option>\r\n                      <option value=\"PL\">Poland</option>\r\n                      <option value=\"PT\">Portugal</option>\r\n                      <option value=\"PR\">Puerto Rico</option>\r\n                      <option value=\"QA\">Qatar</option>\r\n                      <option value=\"RE\">Reunion</option>\r\n                      <option value=\"RO\">Romania</option>\r\n                      <option value=\"RU\">Russian Federation</option>\r\n                      <option value=\"RW\">Rwanda</option>\r\n                      <option value=\"BL\">Saint Barthelemy</option>\r\n                      <option value=\"SH\">Saint Helena</option>\r\n                      <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                      <option value=\"LC\">Saint Lucia</option>\r\n                      <option value=\"MF\">Saint Martin</option>\r\n                      <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                      <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                      <option value=\"WS\">Samoa</option>\r\n                      <option value=\"SM\">San Marino</option>\r\n                      <option value=\"ST\">Sao Tome and Principe</option>\r\n                      <option value=\"SA\">Saudi Arabia</option>\r\n                      <option value=\"SN\">Senegal</option>\r\n                      <option value=\"RS\">Serbia</option>\r\n                      <option value=\"CS\">Serbia and Montenegro</option>\r\n                      <option value=\"SC\">Seychelles</option>\r\n                      <option value=\"SL\">Sierra Leone</option>\r\n                      <option value=\"SG\">Singapore</option>\r\n                      <option value=\"SX\">Sint Maarten</option>\r\n                      <option value=\"SK\">Slovakia</option>\r\n                      <option value=\"SI\">Slovenia</option>\r\n                      <option value=\"SB\">Solomon Islands</option>\r\n                      <option value=\"SO\">Somalia</option>\r\n                      <option value=\"ZA\">South Africa</option>\r\n                      <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\r\n                      <option value=\"SS\">South Sudan</option>\r\n                      <option value=\"ES\">Spain</option>\r\n                      <option value=\"LK\">Sri Lanka</option>\r\n                      <option value=\"SD\">Sudan</option>\r\n                      <option value=\"SR\">Suriname</option>\r\n                      <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                      <option value=\"SZ\">Swaziland</option>\r\n                      <option value=\"SE\">Sweden</option>\r\n                      <option value=\"CH\">Switzerland</option>\r\n                      <option value=\"SY\">Syrian Arab Republic</option>\r\n                      <option value=\"TW\">Taiwan, Province of China</option>\r\n                      <option value=\"TJ\">Tajikistan</option>\r\n                      <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                      <option value=\"TH\">Thailand</option>\r\n                      <option value=\"TL\">Timor-Leste</option>\r\n                      <option value=\"TG\">Togo</option>\r\n                      <option value=\"TK\">Tokelau</option>\r\n                      <option value=\"TO\">Tonga</option>\r\n                      <option value=\"TT\">Trinidad and Tobago</option>\r\n                      <option value=\"TN\">Tunisia</option>\r\n                      <option value=\"TR\">Turkey</option>\r\n                      <option value=\"TM\">Turkmenistan</option>\r\n                      <option value=\"TC\">Turks and Caicos Islands</option>\r\n                      <option value=\"TV\">Tuvalu</option>\r\n                      <option value=\"UG\">Uganda</option>\r\n                      <option value=\"UA\">Ukraine</option>\r\n                      <option value=\"AE\">United Arab Emirates</option>\r\n                      <option value=\"GB\">United Kingdom</option>\r\n                      <option value=\"US\">United States</option>\r\n                      <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                      <option value=\"UY\">Uruguay</option>\r\n                      <option value=\"UZ\">Uzbekistan</option>\r\n                      <option value=\"VU\">Vanuatu</option>\r\n                      <option value=\"VE\">Venezuela</option>\r\n                      <option value=\"VN\">Viet Nam</option>\r\n                      <option value=\"VG\">Virgin Islands, British</option>\r\n                      <option value=\"VI\">Virgin Islands, U.s.</option>\r\n                      <option value=\"WF\">Wallis and Futuna</option>\r\n                      <option value=\"EH\">Western Sahara</option>\r\n                      <option value=\"YE\">Yemen</option>\r\n                      <option value=\"ZM\">Zambia</option>\r\n                      <option value=\"ZW\">Zimbabwe</option>\r\n                    </select>\r\n                    <select className='simInput' id=\"currency\" name=\"currency\" onChange={(e) => onChange(e, formData, setFormData)}>\r\n                      <option value=\"usd\">USD</option>\r\n                      <option value=\"eur\">Eur</option>\r\n                    </select>\r\n                    \r\n                  </div>\r\n                  <div className='form-group'>\r\n                  <label className='label' htmlFor='nombre'>\r\n              Number of account:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              required\r\n              placeholder='Number of account'\r\n              type='text'\r\n              id='nombre'\r\n              name='account_number'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                  <label className='label' htmlFor='nombre'>\r\n              Routing number:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              placeholder='Routing number (not always neccesary)'\r\n              type='text'\r\n              id='nombre'\r\n              name='routing_number'\r\n              onChange={(e) => onChange(e, formData, setFormData)}\r\n              className='input'\r\n            />\r\n                  </div>\r\n                  \r\n          <Diverror error={error}/>\r\n          {loader ?(\r\n            <Loader></Loader>\r\n          ):(\r\n            <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Create'\r\n            style={{ marginTop: 20}}\r\n          />\r\n          )}\r\n          \r\n        </form>\r\n        \r\n      </div>\r\n\r\n\r\n    \r\n    </div>\r\n    );\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default BankAccount;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\VerificationFile.js",["173","174","175","176","177","178","179","180"],"import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Constantes from '../Constantes';\r\nimport { UserContext } from './UserContext';\r\nimport { verification_file } from '../ConsultasAPI/auth';\r\nimport { Diverror, Loader, onChange } from '../ConsultasAPI/login';\r\n\r\nconst VerificationFile = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    fileToUpload: '',\r\n  });\r\n  const [file, setFile] = useState(false);\r\n  const changeHandler = (event) => {\r\n\t\tsetFile(event.target.files[0]);\r\n    setFormData({ ...formData, fileToUpload: event.target.files[0]});\r\n\t\t//alert(file);\r\n\t};\r\n\r\n  //Variable error, vista y cargador\r\n  const [error ,setError ] = useState(\"\");\r\n  const [loader ,setLoader ] = useState(false);\r\n  const { user1, setUser1 } = useContext(UserContext);\r\n\r\n  return (\r\n    <div className='popUp'>\r\n      <div className='login column is-one-third' id='register'>\r\n        <h1 className='is-size-3'>Bank Account</h1>\r\n        <button className=\"closeForm\" onClick={() => {props.setView(false);setError('')}}>X</button>\r\n        <form className='field' encType=\"multipart/form-data\" onSubmit={(e) => verification_file(e, user1.stripe_id, formData, setFormData, setError, setLoader)}>\r\n          <div className='form-group'>\r\n            <label className='label' htmlFor='nombre'>\r\n              File:\r\n            </label>\r\n            <input type=\"file\" name=\"fileToUpload\" required  onChange={(e) => changeHandler(e)} />\r\n          </div>\r\n          \r\n                  \r\n          <Diverror error={error}/>\r\n          {loader ?(\r\n            <Loader></Loader>\r\n          ):(\r\n            <input\r\n            type='submit'\r\n            className='divButon'\r\n            value='Create'\r\n            style={{ marginTop: 20}}\r\n          />\r\n          )}\r\n          \r\n        </form>\r\n        \r\n      </div>\r\n\r\n\r\n    \r\n    </div>\r\n    );\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default VerificationFile;\r\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\Paginas\\Card.js",[],"D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\stripe.js",["181","182","183"],"import React, { useEffect, useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n//import \"./CheckoutForm.css\";\nimport api from \"./stripe-api\";\n\nexport default function CheckoutForm(props) {\n  const [amount, setAmount] = useState(0);\n  const [currency, setCurrency] = useState(\"\");\n  const [clientSecret, setClientSecret] = useState(null);\n  const [error, setError] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  useEffect(() => {\n    // Step 1: Fetch product details such as amount and currency from\n    // API to make sure it can't be tampered with in the client.\n    /*\n    api.getProductDetails(props.id).then((productDetails) => {\n      console.log(props.id);\n      console.log(productDetails);\n      setAmount(productDetails.amount / 100);\n      setCurrency(productDetails.currency);\n    });\n    */\n\n    // Step 2: Create PaymentIntent over Stripe API\n    api\n      .createPaymentIntent(props.id)\n      .then((clientSecret) => {\n        setClientSecret(clientSecret);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, []);\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n\n    // Step 3: Use clientSecret from PaymentIntent and the CardElement\n    // to confirm payment with stripe.confirmCardPayment()\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value,\n        },\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setSucceeded(true);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent);\n    }\n  };\n\n  const renderSuccess = () => {\n    return (\n      <div className=\"sr-field-success message\">\n        <h1>Your test payment succeeded</h1>\n        <p>View PaymentIntent response:</p>\n        <pre className=\"sr-callout\">\n          <code>{JSON.stringify(metadata, null, 2)}</code>\n        </pre>\n      </div>\n    );\n  };\n\n  const renderForm = () => {\n    const options = {\n      style: {\n        base: {\n          color: \"#32325d\",\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: \"antialiased\",\n          fontSize: \"16px\",\n          \"::placeholder\": {\n            color: \"#aab7c4\",\n          },\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\",\n        },\n      },\n    };\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <h1>\n          {currency.toLocaleUpperCase()}{\" \"}\n          {amount.toLocaleString(navigator.language, {\n            minimumFractionDigits: 2,\n          })}{\" \"}\n        </h1>\n        <h4>Pre-order the Pasha package</h4>\n\n        <div className=\"sr-combo-inputs\">\n          <div className=\"sr-combo-inputs-row\">\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              autoComplete=\"cardholder\"\n              className=\"sr-input\"\n            />\n          </div>\n\n          <div className=\"sr-combo-inputs-row\">\n            <CardElement\n              className=\"sr-input sr-card-element\"\n              options={options}\n            />\n          </div>\n        </div>\n\n        {error && <div className=\"message sr-field-error\">{error}</div>}\n\n        <button\n          className=\"btn\"\n          disabled={processing || !clientSecret || !stripe}\n        >\n          {processing ? \"Processing…\" : \"Pay\"}\n        </button>\n      </form>\n    );\n  };\n\n  return (\n    <div className=\"checkout-form\">\n      <div className=\"sr-payment-form\">\n        <div className=\"sr-form-row\" />\n        {succeeded ? renderSuccess() : renderForm()}\n      </div>\n    </div>\n  );\n}\n","D:\\xampp\\htdocs\\phpreact\\react-cliente-api-php-master\\src\\ConsultasAPI\\stripe-api.js",[],["184","185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":16,"column":8,"nodeType":"192","messageId":"193","endLine":16,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":17,"column":8,"nodeType":"192","messageId":"193","endLine":17,"endColumn":18},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"196","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"198","line":23,"column":10,"nodeType":"192","messageId":"193","endLine":23,"endColumn":15},{"ruleId":"190","severity":1,"message":"199","line":23,"column":17,"nodeType":"192","messageId":"193","endLine":23,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":46,"column":7,"nodeType":"202","endLine":46,"endColumn":37},{"ruleId":"190","severity":1,"message":"196","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"203","line":5,"column":18,"nodeType":"192","messageId":"193","endLine":5,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":42,"column":17,"nodeType":"206","messageId":"207","endLine":42,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":126,"column":24,"nodeType":"206","messageId":"207","endLine":126,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":188,"column":24,"nodeType":"206","messageId":"207","endLine":188,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"186","replacedBy":"208"},{"ruleId":"188","replacedBy":"209"},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":25,"column":4,"nodeType":"212","endLine":25,"endColumn":6,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":39,"column":13,"nodeType":"216","messageId":"207","endLine":39,"endColumn":17},{"ruleId":"190","severity":1,"message":"195","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"217","line":16,"column":10,"nodeType":"192","messageId":"193","endLine":16,"endColumn":14},{"ruleId":"190","severity":1,"message":"218","line":16,"column":16,"nodeType":"192","messageId":"193","endLine":16,"endColumn":23},{"ruleId":"190","severity":1,"message":"203","line":19,"column":18,"nodeType":"192","messageId":"193","endLine":19,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":34,"column":21,"nodeType":"206","messageId":"207","endLine":34,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":37,"column":16,"nodeType":"206","messageId":"207","endLine":37,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":57,"column":17,"nodeType":"206","messageId":"207","endLine":57,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":61,"column":23,"nodeType":"206","messageId":"207","endLine":61,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":66,"column":22,"nodeType":"206","messageId":"207","endLine":66,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":71,"column":22,"nodeType":"206","messageId":"207","endLine":71,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":22,"column":11,"nodeType":"216","messageId":"207","endLine":22,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":49,"column":9,"nodeType":"216","messageId":"207","endLine":49,"endColumn":13},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"219","line":33,"column":10,"nodeType":"192","messageId":"193","endLine":33,"endColumn":19},{"ruleId":"190","severity":1,"message":"220","line":33,"column":21,"nodeType":"192","messageId":"193","endLine":33,"endColumn":33},{"ruleId":"190","severity":1,"message":"221","line":37,"column":10,"nodeType":"192","messageId":"193","endLine":37,"endColumn":19},{"ruleId":"190","severity":1,"message":"222","line":37,"column":21,"nodeType":"192","messageId":"193","endLine":37,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":131,"column":30,"nodeType":"206","messageId":"207","endLine":131,"endColumn":32},{"ruleId":"190","severity":1,"message":"195","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"223","line":1,"column":50,"nodeType":"192","messageId":"193","endLine":1,"endColumn":56},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"203","line":15,"column":18,"nodeType":"192","messageId":"193","endLine":15,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"223","line":1,"column":50,"nodeType":"192","messageId":"193","endLine":1,"endColumn":56},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"224","line":7,"column":28,"nodeType":"192","messageId":"193","endLine":7,"endColumn":31},{"ruleId":"190","severity":1,"message":"203","line":21,"column":18,"nodeType":"192","messageId":"193","endLine":21,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"223","line":1,"column":50,"nodeType":"192","messageId":"193","endLine":1,"endColumn":56},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"225","line":7,"column":28,"nodeType":"192","messageId":"193","endLine":7,"endColumn":36},{"ruleId":"190","severity":1,"message":"226","line":13,"column":10,"nodeType":"192","messageId":"193","endLine":13,"endColumn":14},{"ruleId":"190","severity":1,"message":"203","line":23,"column":18,"nodeType":"192","messageId":"193","endLine":23,"endColumn":26},{"ruleId":"190","severity":1,"message":"227","line":7,"column":18,"nodeType":"192","messageId":"193","endLine":7,"endColumn":27},{"ruleId":"190","severity":1,"message":"228","line":8,"column":20,"nodeType":"192","messageId":"193","endLine":8,"endColumn":31},{"ruleId":"210","severity":1,"message":"229","line":38,"column":6,"nodeType":"212","endLine":38,"endColumn":8,"suggestions":"230"},{"ruleId":"186","replacedBy":"231"},{"ruleId":"188","replacedBy":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Constantes' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'datos' is assigned a value but never used.","'setDatos' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setUser1' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["233"],["234"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formData' and 'props.match.params.token'. Either include them or remove the dependency array.","ArrayExpression",["235"],"no-eval","eval can be harmful.","CallExpression","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","'formData2' is assigned a value but never used.","'setFormData2' is assigned a value but never used.","'formData3' is assigned a value but never used.","'setFormData3' is assigned a value but never used.","'useRef' is defined but never used.","'Reg' is defined but never used.","'onChange' is defined but never used.","'file' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setCurrency' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["236"],["233"],["234"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [formData, props.match.params.token]",{"range":"241","text":"242"},"Update the dependencies array to be: [props.id]",{"range":"243","text":"244"},[593,595],"[formData, props.match.params.token]",[1299,1301],"[props.id]"]